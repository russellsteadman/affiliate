{"version":3,"sources":["webpack://Affiliate/webpack/bootstrap","webpack://Affiliate/../node_modules/docile/src/docile.ts","webpack://Affiliate/../src/Log.ts","webpack://Affiliate/../src/Generator.ts","webpack://Affiliate/../src/AutoConfig.ts","webpack://Affiliate/../src/Affiliate.ts","webpack://Affiliate/../node_modules/url-parse/index.js","webpack://Affiliate/../node_modules/webpack/buildin/global.js","webpack://Affiliate/../node_modules/requires-port/index.js","webpack://Affiliate/../node_modules/querystringify/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","attrId","attrStore","error","console","args","Utility","node","this","ready","document","getElementById","findNode","id","getAttribute","Math","random","toString","substr","setAttribute","querySelector","useLinkStore","stores","store","linkStore","head","JSON","stringify","parse","e","indexOf","readyState","DocileLink","Docile","state","alias","storage","idFromNode","set","findById","links","data","default","isError","textId","log","__importDefault","mod","docile_1","require","AutoConfig_1","Affiliate_1","Log_1","Generator","instances","config","Instance","push","detachAll","detach","revert","nodes","slice","body","getElementsByTagName","linkData","was","href","auto","attach","breakUp","delimiter","split","trim","scriptNode","nodeData","dataset","aff","parsedData","tags","tag","hosts","query","u","url_parse_1","canObserve","window","MutationObserver","Affiliate","attached","undefined","url","is","originalURL","modify","returnedURL","modifiedUrl","replace","forEach","replacement","from","to","addEventListener","traverse","observe","childList","subtree","attributes","characterData","attributeFilter","disconnect","map","mutations","emitted","type","attributeName","target","nodeSet","collection","values","nodeName","toLowerCase","host","required","qs","slashes","protocolre","left","RegExp","trimLeft","str","rules","address","NaN","ignore","hash","lolcation","loc","location","global","self","finaldestination","protocol","Url","unescape","pathname","test","extractProtocol","match","exec","rest","parser","relative","extracted","instruction","index","instructions","length","charAt","base","path","concat","last","unshift","up","splice","join","resolve","port","hostname","username","password","auth","origin","part","fn","pop","char","ins","result","g","Function","has","decode","input","decodeURIComponent","obj","prefix","pairs","isNaN","encodeURIComponent"],"mappings":"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","file":"affiliate.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* global arguments */\r\nconst docilePrefix = 'data-docile-';\r\nconst attrId = `${docilePrefix}id`;\r\nconst attrStore = `${docilePrefix}store`;\r\nconst error = function (...args) {\r\n    if (typeof console === 'object') {\r\n        console.error('[Docile] ', ...args);\r\n    }\r\n};\r\nclass Utility {\r\n    get ready() {\r\n        return ['loaded', 'interactive', 'complete'].indexOf(document.readyState) !== -1;\r\n    }\r\n    findNode(node) {\r\n        if (!this.ready) {\r\n            error('DOM not loaded. Learn more: https://goo.gl/EsYspK');\r\n            return;\r\n        }\r\n        if (typeof node === 'string')\r\n            node = document.getElementById(node);\r\n        if (node)\r\n            return node;\r\n        error('Unable to resolve node.');\r\n    }\r\n    idFromNode(node) {\r\n        node = this.findNode(node);\r\n        if (!node)\r\n            return;\r\n        let id = node.getAttribute(attrId);\r\n        if (!id) {\r\n            id = Math.random().toString(36).substr(2);\r\n            node.setAttribute(attrId, id);\r\n        }\r\n        return id;\r\n    }\r\n    findById(id) {\r\n        return document.querySelector(`[${attrId}=\"${id}\"]`);\r\n    }\r\n    storage(useLinkStore, key, value) {\r\n        let stores = {\r\n            store: {},\r\n            linkStore: {}\r\n        };\r\n        let { head } = document;\r\n        let name = useLinkStore ? 'store' : 'linkStore';\r\n        try {\r\n            if (!head.getAttribute(attrStore))\r\n                head.setAttribute(attrStore, JSON.stringify(stores));\r\n            stores = JSON.parse(head.getAttribute(attrStore) ?? '');\r\n        }\r\n        catch (e) {\r\n            error('Data could not be resumed.');\r\n        }\r\n        if (typeof value === 'undefined') {\r\n            return stores[name][key];\r\n        }\r\n        else {\r\n            stores[name][key] = value;\r\n            try {\r\n                head.setAttribute(attrStore, JSON.stringify(stores));\r\n            }\r\n            catch (e) {\r\n                error('Data could not be saved.');\r\n            }\r\n        }\r\n    }\r\n}\r\nclass DocileLink extends Utility {\r\n    constructor(Docile, id) {\r\n        super();\r\n        this.state = {\r\n            id: '',\r\n        };\r\n        this.state = {\r\n            id\r\n        };\r\n        this.Docile = Docile;\r\n    }\r\n    set(alias, node) {\r\n        this.storage(true, this.state.id, this.storage(true, this.state.id) || {});\r\n        if (typeof alias === 'string') {\r\n            node = this.findNode(node);\r\n            if (!node)\r\n                return;\r\n            this.storage(true, this.state.id, {\r\n                ...this.storage(true, this.state.id),\r\n                [alias]: this.Docile.idFromNode(node)\r\n            });\r\n        }\r\n        else if (typeof alias === 'object') {\r\n            for (let i in alias) {\r\n                this.set(i, alias[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    get(alias) {\r\n        this.storage(true, this.state.id, this.storage(true, this.state.id) || {});\r\n        if (alias) {\r\n            if (typeof alias !== 'string')\r\n                return error('Link name must be a string.');\r\n            return this.findById(this.storage(true, this.state.id)[alias]);\r\n        }\r\n        else {\r\n            let links = this.storage(true, this.state.id);\r\n            for (let i in links) {\r\n                links[i] = this.findById(links[i]);\r\n            }\r\n            return links;\r\n        }\r\n    }\r\n    getData(alias) {\r\n        if (alias) {\r\n            return this.Docile.get(this.get(alias));\r\n        }\r\n        else {\r\n            let data = this.get();\r\n            for (let i in data) {\r\n                data[i] = this.Docile.get(data[i]);\r\n            }\r\n            return data;\r\n        }\r\n    }\r\n}\r\nclass Docile extends Utility {\r\n    constructor() {\r\n        super();\r\n    }\r\n    set(node, data) {\r\n        node = this.findNode(node);\r\n        if (!node)\r\n            return;\r\n        const id = this.idFromNode(node);\r\n        if (id)\r\n            this.storage(false, id, data);\r\n        return this;\r\n    }\r\n    get(node) {\r\n        var id = this.idFromNode(node);\r\n        if (!id)\r\n            return;\r\n        return this.storage(false, id);\r\n    }\r\n    link(node) {\r\n        var id = this.idFromNode(node);\r\n        if (!id)\r\n            return;\r\n        return new DocileLink(this, id);\r\n    }\r\n}\r\nexports.default = new Docile();\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * log handles formatting and doesn't throw errors is console is undefined\r\n *\r\n * @module affiliate/src/Log\r\n */\r\nfunction default_1(isError, ...args) {\r\n    const textId = '[Affiliate] ';\r\n    if (typeof console === 'object') {\r\n        if (isError) {\r\n            console.error(textId, ...args);\r\n        }\r\n        else {\r\n            console.log(textId, ...args);\r\n        }\r\n    }\r\n}\r\nexports.default = default_1;\r\n;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst docile_1 = __importDefault(require(\"docile/src/docile\"));\r\nconst AutoConfig_1 = __importDefault(require(\"./AutoConfig\"));\r\nconst Affiliate_1 = __importDefault(require(\"./Affiliate\"));\r\nconst Log_1 = __importDefault(require(\"./Log\"));\r\n/**\r\n * @class Set up the global Affiliate export\r\n */\r\nclass Generator {\r\n    constructor() {\r\n        this.#state = {\r\n            instances: [],\r\n        };\r\n        /**\r\n         * Create a new Affiliate instance\r\n         *\r\n         * @function\r\n         * @param {object} config Configuration options for Affiliate\r\n         * @returns {object} Affiliate instance\r\n         */\r\n        this.create = (config) => {\r\n            let Instance = new Affiliate_1.default(config);\r\n            this.#state.instances.push(Instance);\r\n            return Instance;\r\n        };\r\n        /**\r\n         * Detach automatic link traversal\r\n         *\r\n         * @function\r\n         */\r\n        this.detachAll = () => {\r\n            for (let i in this.#state.instances) {\r\n                this.#state.instances[i].detach();\r\n            }\r\n        };\r\n        /**\r\n         * Revert all traversed links to their non-affiliated state\r\n         *\r\n         * @function\r\n         */\r\n        this.revert = () => {\r\n            this.detachAll();\r\n            let nodes = [].slice.call(document.body.getElementsByTagName('a'));\r\n            for (let i in nodes) {\r\n                let linkData = docile_1.default.get(nodes[i]);\r\n                if (linkData && linkData.was) {\r\n                    nodes[i].href = linkData.was;\r\n                    docile_1.default.set(nodes[i], {});\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            let config = AutoConfig_1.default();\r\n            if (typeof config === 'object') {\r\n                let auto = this.create(config);\r\n                Log_1.default(false, auto);\r\n                this.#state.auto = auto;\r\n                auto.attach();\r\n            }\r\n        }\r\n        catch (e) {\r\n            Log_1.default(true, e);\r\n        }\r\n    }\r\n    #state;\r\n    /**\r\n     * Expose the instance list\r\n     *\r\n     * @type {Array.<object>}\r\n     */\r\n    get instances() {\r\n        return [...this.#state.instances];\r\n    }\r\n}\r\nexports.default = new Generator();\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* Utility function for parsing data-aff syntax */\r\nconst breakUp = (data, delimiter) => {\r\n    if (typeof data === 'object') {\r\n        for (let i in data) {\r\n            data[i] = breakUp(data[i], delimiter);\r\n        }\r\n    }\r\n    else if (typeof data === 'string') {\r\n        data = data.split(delimiter);\r\n        for (let o in data) {\r\n            data[o] = data[o].trim();\r\n        }\r\n    }\r\n    return data;\r\n};\r\n/* Setup automatic configuration */\r\nconst AutoConfig = () => {\r\n    let scriptNode = document.getElementById('aff-js');\r\n    if (typeof scriptNode === 'object' && scriptNode !== null) {\r\n        let nodeData = scriptNode.dataset.aff;\r\n        if (typeof nodeData === 'string') {\r\n            let parsedData = breakUp(breakUp(breakUp(breakUp(nodeData, '!'), ':'), ','), '=');\r\n            let tags = [];\r\n            for (let i in parsedData) {\r\n                let tag = {\r\n                    hosts: [],\r\n                    query: {}\r\n                };\r\n                for (let o in parsedData[i][0]) {\r\n                    tag.hosts.push(parsedData[i][0][o][0]);\r\n                }\r\n                for (let u in parsedData[i][1]) {\r\n                    tag.query[parsedData[i][1][u][0]] = parsedData[i][1][u][1];\r\n                }\r\n                tags.push(tag);\r\n            }\r\n            return { tags };\r\n        }\r\n    }\r\n};\r\nexports.default = AutoConfig;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst url_parse_1 = __importDefault(require(\"url-parse\"));\r\nconst docile_1 = __importDefault(require(\"docile/src/docile\"));\r\nconst Log_1 = __importDefault(require(\"./Log\"));\r\n// Check for MutationObserver\r\nconst canObserve = !(typeof window.MutationObserver === 'undefined');\r\n/**\r\n * @class Manages stateful affiliation\r\n */\r\nclass Affiliate {\r\n    constructor(config) {\r\n        this.#state = {\r\n            attached: false,\r\n            config: {\r\n                tags: []\r\n            },\r\n            hosts: []\r\n        };\r\n        this.#observer = undefined;\r\n        /**\r\n         * Modify the URL of a matching link while preserving the original link state\r\n         *\r\n         * @private\r\n         * @function\r\n         * @param {string} url Original url string\r\n         * @param {object} node Anchor link node\r\n         * @param {object} tag Matching configuration tag\r\n         */\r\n        this.#modifyURL = (url, node, tag) => {\r\n            // Check if URL is already modified\r\n            let linkData = docile_1.default.get(node) || {};\r\n            if (linkData.is && linkData.is === url.href)\r\n                return;\r\n            // Preserve the original URL\r\n            let originalURL = url.href;\r\n            this.log(false, 'Discovered URL: ' + url.href);\r\n            // Change query variables\r\n            url.set('query', { ...url.query, ...tag.query });\r\n            // Run the modification function\r\n            if (typeof tag.modify === 'function') {\r\n                try {\r\n                    let returnedURL = tag.modify(url);\r\n                    if (typeof returnedURL === 'object')\r\n                        returnedURL = returnedURL.href;\r\n                    url = url_parse_1.default(returnedURL, true);\r\n                }\r\n                catch (e) {\r\n                    Log_1.default(true, e);\r\n                }\r\n            }\r\n            // Replace certain parts of the url\r\n            let modifiedUrl = url.href;\r\n            tag.replace?.forEach((replacement) => {\r\n                modifiedUrl = modifiedUrl.replace(replacement.from, replacement.to);\r\n            });\r\n            // Update the href tag and save the url to the DOM node\r\n            node.href = modifiedUrl;\r\n            docile_1.default.set(node, {\r\n                was: originalURL,\r\n                is: url\r\n            });\r\n        };\r\n        /**\r\n         * Attach the mutation observer\r\n         *\r\n         * @function\r\n         */\r\n        this.attach = () => {\r\n            // Cannot attach twice\r\n            if (this.#state.attached)\r\n                return;\r\n            // Get readyState, or the loading state of the DOM\r\n            let { readyState } = document;\r\n            if (readyState === 'complete' || readyState === 'interactive') {\r\n                // Set attached to true\r\n                this.#state.attached = true;\r\n                // Run through the entire body tag\r\n                this.traverse();\r\n                if (canObserve && this.#observer) {\r\n                    // Attach the observer\r\n                    this.#observer.observe(document.body, {\r\n                        childList: true,\r\n                        subtree: true,\r\n                        attributes: true,\r\n                        characterData: true,\r\n                        attributeFilter: ['href']\r\n                    });\r\n                }\r\n                else {\r\n                    this.log(false, 'Browser does not support MutationObserver.');\r\n                }\r\n            }\r\n            else {\r\n                // Wait until the DOM loads\r\n                return window.addEventListener('DOMContentLoaded', this.attach);\r\n            }\r\n        };\r\n        /**\r\n         * Detach the mutation observer\r\n         *\r\n         * @function\r\n         */\r\n        this.detach = () => {\r\n            if (!canObserve || !this.#observer)\r\n                return;\r\n            this.#state.attached = false;\r\n            this.#observer.disconnect();\r\n            this.log(false, 'Observer disconnected.');\r\n        };\r\n        // Extend the configuration\r\n        config = config ?? {};\r\n        config.tags = config.tags ?? [];\r\n        config.tags.map((tag, i) => {\r\n            if (!config || !config.tags)\r\n                return;\r\n            // Convert a single host to an array\r\n            if (typeof tag.hosts === 'string')\r\n                tag.hosts = [tag.hosts];\r\n            // Extend proper tag configuration\r\n            config.tags[i] = {\r\n                query: {},\r\n                replace: [],\r\n                ...tag\r\n            };\r\n            // Append hosts to full list\r\n            this.#state.hosts = [...this.#state.hosts, ...config.tags[i].hosts];\r\n        });\r\n        // Set logging function\r\n        this.log = config.log ? Log_1.default : () => { };\r\n        this.log(false, 'New Instance', config);\r\n        // Check is MutationObserver is supported\r\n        if (canObserve) {\r\n            // Initialize MutationObserver\r\n            this.#observer = new window.MutationObserver((mutations) => {\r\n                // This function is called for every DOM mutation\r\n                // Has a mutation been logged\r\n                let emitted = false;\r\n                for (let i in mutations) {\r\n                    // If the attributes of the link have been modified\r\n                    if (mutations[i].type === 'attributes') {\r\n                        // Skip links without an href\r\n                        if (mutations[i].attributeName !== 'href')\r\n                            continue;\r\n                        let href = mutations[i].target.href;\r\n                        let linkData = docile_1.default.get(mutations[i].target) || {};\r\n                        // Skip links without a modified href\r\n                        if (linkData.is && linkData.is === href)\r\n                            continue;\r\n                    }\r\n                    // Only calls on first mutation\r\n                    if (!emitted) {\r\n                        this.log(false, 'DOM Mutation', mutations[i]);\r\n                        emitted = true;\r\n                    }\r\n                    // Scan the node and subnodes if there are any\r\n                    this.traverse(mutations[i].target);\r\n                }\r\n            });\r\n        }\r\n        // Set internal state\r\n        this.#state.config = config;\r\n    }\r\n    #state;\r\n    #observer;\r\n    /**\r\n     * Manual function to search the DOM for unaffiliated links\r\n     *\r\n     * @function\r\n     * @param {object=} nodeSet The node to traverse for links (default: document.body)\r\n     */\r\n    traverse(nodeSet = document.body) {\r\n        if (typeof nodeSet !== 'object' || typeof nodeSet.getElementsByTagName !== 'function')\r\n            return;\r\n        this.log(false, 'Traversing DOM...');\r\n        // Reduce link collection to array\r\n        let collection = nodeSet.getElementsByTagName('a');\r\n        let nodes = Object.values(collection);\r\n        // If the nodeSet is a single link, turn to array\r\n        if (nodeSet.nodeName.toLowerCase() === 'a')\r\n            nodes = [nodeSet];\r\n        // Go through each link\r\n        for (let o in nodes) {\r\n            // Check if it is actually linking\r\n            if (!nodes[o] || 'href' in nodes[o])\r\n                continue;\r\n            // Parse the URL via url-parse\r\n            let url = url_parse_1.default(nodes[o].href ?? '', true);\r\n            // Only modify hosts provided.\r\n            if (this.#state.hosts.indexOf(url.host) === -1)\r\n                continue;\r\n            for (let i in this.#state.config.tags) {\r\n                if (this.#state.config.tags[i].hosts.indexOf(url.host) !== -1) {\r\n                    this.#modifyURL(url, nodes[o], this.#state.config.tags[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Modify the URL of a matching link while preserving the original link state\r\n     *\r\n     * @private\r\n     * @function\r\n     * @param {string} url Original url string\r\n     * @param {object} node Anchor link node\r\n     * @param {object} tag Matching configuration tag\r\n     */\r\n    #modifyURL;\r\n}\r\nexports.default = Affiliate;\r\n","'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i\n  , whitespace = '[\\\\x09\\\\x0A\\\\x0B\\\\x0C\\\\x0D\\\\x20\\\\xA0\\\\u1680\\\\u180E\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200A\\\\u202F\\\\u205F\\\\u3000\\\\u2028\\\\u2029\\\\uFEFF]'\n  , left = new RegExp('^'+ whitespace +'+');\n\n/**\n * Trim a given string.\n *\n * @param {String} str String to trim.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(left, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address) {          // Sanitize what is left of the address\n    return address.replace('\\\\', '/');\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') globalVar = window;\n  else if (typeof global !== 'undefined') globalVar = global;\n  else if (typeof self !== 'undefined') globalVar = self;\n  else globalVar = {};\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address) {\n  address = trimLeft(address);\n  var match = protocolre.exec(address);\n\n  return {\n    protocol: match[1] ? match[1].toLowerCase() : '',\n    slashes: !!match[2],\n    rest: match[3]\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '');\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (!extracted.slashes) instructions[3] = [/(.*)/, 'pathname'];\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result = protocol + (url.slashes ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = qs;\n\nmodule.exports = Url;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encodeURIComponent(key);\n      value = encodeURIComponent(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue;\n      pairs.push(key +'='+ value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n"],"sourceRoot":""}