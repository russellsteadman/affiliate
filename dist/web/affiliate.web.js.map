{"version":3,"file":"affiliate.web.js","mappings":"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","sources":["webpack://Affiliate/../src/Affiliate.ts","webpack://Affiliate/../src/index.ts","webpack://Affiliate/../src/shared/autoConfig.ts","webpack://Affiliate/../src/shared/features.ts","webpack://Affiliate/../src/shared/log.ts","webpack://Affiliate/../src/shared/nodeTools.ts","webpack://Affiliate/webpack/bootstrap","webpack://Affiliate/webpack/startup"],"sourcesContent":["import { hasMutationObserver, hasURL } from './shared/features';\nimport Log from './shared/log';\nimport { getNodeData, setNodeData } from './shared/nodeTools';\n\nexport interface AffiliateConfigTag {\n  hosts: string | string[];\n  query?: { [key: string]: string };\n  replace?: {\n    to: string;\n    from: string;\n  }[];\n  modify?: (url: URL) => URL | string;\n}\n\nexport interface AffiliateConfig {\n  tags: AffiliateConfigTag[];\n  log?: boolean;\n}\n\n/**\n * @class Manages stateful affiliation\n */\nclass Affiliate {\n  state: {\n    attached: boolean;\n    config: AffiliateConfig;\n    hosts: string[];\n  } = {\n    attached: false,\n    config: {\n      tags: [],\n    },\n    hosts: [],\n  };\n  observer: MutationObserver | undefined = undefined;\n  log: typeof Log;\n\n  constructor(config?: Partial<AffiliateConfig>) {\n    // Extend the configuration\n    config = config ?? {};\n    config.tags = config.tags ?? [];\n\n    config.tags.map((tag, i) => {\n      if (!config || !config.tags) return;\n\n      // Convert a single host to an array\n      if (typeof tag.hosts === 'string') tag.hosts = [tag.hosts];\n\n      // Extend proper tag configuration\n      config.tags[i] = {\n        query: {},\n        replace: [],\n        ...tag,\n      };\n\n      // Append hosts to full list\n      this.state.hosts = [\n        ...this.state.hosts,\n        ...(<string[]>config.tags[i].hosts),\n      ];\n    });\n\n    // Set logging function\n    this.log = config.log ? Log : () => undefined;\n\n    this.log(false, 'New Instance', config);\n\n    // Check is MutationObserver is supported\n    if (hasMutationObserver) {\n      // Initialize MutationObserver\n      this.observer = new window.MutationObserver((mutations) => {\n        // This function is called for every DOM mutation\n\n        // Has a mutation been logged\n        let emitted = false;\n\n        mutations.forEach((mutation) => {\n          // If the attributes of the link have been modified\n          if (mutation.type === 'attributes') {\n            // Skip links without an href\n            if (mutation.attributeName !== 'href') return;\n\n            const href = (<HTMLAnchorElement>mutation.target).href;\n            const linkData = getNodeData(mutation.target);\n\n            // Skip links without a modified href\n            if (linkData.is && linkData.is === href) return;\n          }\n\n          // Only calls on first mutation\n          if (!emitted) {\n            this.log(false, 'DOM Mutation', mutation);\n            emitted = true;\n          }\n\n          // Scan the node and subnodes if there are any\n          this.traverse(<HTMLElement>mutation.target);\n        });\n      });\n    }\n\n    // Set internal state\n    this.state.config = <AffiliateConfig>config;\n  }\n\n  /**\n   * Manual function to search the DOM for unaffiliated links\n   *\n   * @function\n   * @param {object=} nodeSet The node to traverse for links (default: document.body)\n   */\n  traverse(nodeSet: HTMLElement = document.body): Affiliate {\n    if (\n      typeof nodeSet !== 'object' ||\n      typeof nodeSet.getElementsByTagName !== 'function'\n    )\n      return this;\n\n    if (!hasURL) {\n      this.log(true, 'This browser needs a URL polyfill.');\n      return this;\n    }\n\n    this.log(false, 'Traversing DOM...');\n\n    // Reduce link collection to array\n    const collection = nodeSet.getElementsByTagName('a');\n    let nodes = <HTMLElement[]>Object.values(collection);\n\n    // If the nodeSet is a single link, turn to array\n    if (nodeSet.nodeName.toLowerCase() === 'a') nodes = [nodeSet];\n\n    this.log(false, `Found ${nodes.length + 1} nodes...`);\n\n    // Go through each link\n    nodes.forEach((node) => {\n      // Check if it is actually linking\n      if (!node || !('href' in node)) return;\n\n      // Parse the URL natively\n      const url = new URL(\n        (<HTMLAnchorElement>node).href ?? '',\n        window?.location.origin,\n      );\n\n      // Only modify hosts provided.\n      if (this.state.hosts.indexOf(url.host) === -1) return;\n      this.state.config.tags.forEach((tag) => {\n        if (tag.hosts.indexOf(url.host) !== -1) {\n          this.modifyURL(url, <HTMLAnchorElement>node, tag);\n        }\n      });\n    });\n\n    return this;\n  }\n\n  /**\n   * Modify the URL of a matching link while preserving the original link state\n   *\n   * @private\n   * @function\n   * @param {string} url Original url string\n   * @param {object} node Anchor link node\n   * @param {object} tag Matching configuration tag\n   */\n  modifyURL = (url: URL, node: HTMLAnchorElement, tag: AffiliateConfigTag) => {\n    // Check if URL is already modified\n    const linkData = getNodeData(node);\n    if (linkData.is && linkData.is === url.href) return;\n\n    // Preserve the original URL\n    const originalURL = url.href;\n\n    this.log(false, 'Discovered URL: ' + url.href);\n\n    // Change query variables\n    if (tag.query) {\n      Object.keys(tag.query ?? {}).forEach((key) => {\n        if (typeof tag.query === 'object')\n          url.searchParams.set(key, tag.query[key]);\n      });\n    }\n\n    // Run the modification function\n    if (typeof tag.modify === 'function') {\n      try {\n        let returnedURL = tag.modify(url);\n        if (typeof returnedURL === 'object') returnedURL = returnedURL.href;\n        url = new URL(returnedURL, window?.location.origin);\n      } catch (e) {\n        Log(true, e as Error);\n      }\n    }\n\n    // Replace certain parts of the url\n    let modifiedUrl = url.href;\n    tag.replace?.forEach((replacement) => {\n      modifiedUrl = modifiedUrl.replace(replacement.from, replacement.to);\n    });\n\n    // Update the href tag and save the url to the DOM node\n    node.href = modifiedUrl;\n    setNodeData(node, {\n      was: originalURL,\n      is: url.href,\n    });\n  };\n\n  /**\n   * Attach the mutation observer\n   *\n   * @function\n   */\n  attach = (): Affiliate => {\n    // Cannot attach twice, cannot attach for node\n    if (this.state.attached || typeof document === 'undefined') return this;\n\n    // Get readyState, or the loading state of the DOM\n    const { readyState } = document;\n\n    if (readyState === 'complete' || readyState === 'interactive') {\n      // Set attached to true\n      this.state.attached = true;\n\n      // Run through the entire body tag\n      this.traverse();\n\n      if (hasMutationObserver && this.observer) {\n        // Attach the observer\n        this.observer.observe(document.body, {\n          childList: true,\n          subtree: true,\n          attributes: true,\n          characterData: true,\n          attributeFilter: ['href'],\n        });\n      } else {\n        this.log(false, 'Browser does not support MutationObserver.');\n      }\n    } else {\n      // Wait until the DOM loads\n      window.addEventListener('DOMContentLoaded', this.attach);\n    }\n\n    return this;\n  };\n\n  /**\n   * Detach the mutation observer\n   *\n   * @function\n   */\n  detach = (): Affiliate => {\n    if (!hasMutationObserver || !this.observer) return this;\n    this.state.attached = false;\n    this.observer.disconnect();\n    this.log(false, 'Observer disconnected.');\n    return this;\n  };\n}\n\nexport default Affiliate;\n","import AutoConfig from './shared/autoConfig';\nimport Affiliate, { AffiliateConfig } from './Affiliate';\nimport Log from './shared/log';\nimport { getNodeData, setNodeData } from './shared/nodeTools';\n\n/**\n * @class Set up the global Affiliate export\n */\nclass Generator {\n  state: {\n    instances: Affiliate[];\n    auto?: Affiliate;\n  } = {\n    instances: [],\n  };\n\n  constructor() {\n    try {\n      const config = AutoConfig();\n      if (typeof config === 'object') {\n        const auto = this.create(config);\n        Log(false, auto);\n        this.state.auto = auto;\n        auto.attach();\n      }\n    } catch (e) {\n      Log(true, e as Error);\n    }\n  }\n\n  /**\n   * Create a new Affiliate instance\n   *\n   * @function\n   * @param {object} config Configuration options for Affiliate\n   * @returns {object} Affiliate instance\n   */\n  create = (config: Partial<AffiliateConfig>) => {\n    const Instance = new Affiliate(config);\n    this.state.instances.push(Instance);\n    return Instance;\n  };\n\n  /**\n   * Expose the instance list\n   *\n   * @type {Array.<object>}\n   */\n  get instances() {\n    return [...this.state.instances];\n  }\n\n  /**\n   * Detach automatic link traversal\n   *\n   * @function\n   */\n  detachAll = () => {\n    this.state.instances.forEach((instance) => instance.detach());\n  };\n\n  /**\n   * Revert all traversed links to their non-affiliated state\n   *\n   * @function\n   */\n  revert = () => {\n    this.detachAll();\n    const nodes = Object.values(document.body.getElementsByTagName('a'));\n    nodes.forEach((node) => {\n      const linkData = getNodeData(node);\n      if (linkData && typeof linkData.was === 'string') {\n        node.href = linkData.was;\n        setNodeData(node, {});\n      }\n    });\n  };\n}\n\nexport default new Generator();\n","const AUTO_CONFIG_SYNTAX_REGEX = /WHERE (.+?) SET (.+?)\\s*(?:AND|$)/g;\n\n/* Setup automatic configuration */\nconst AutoConfig = () => {\n  const scriptNode = document.getElementById('aff-js');\n\n  if (typeof scriptNode === 'object' && scriptNode) {\n    const nodeData = scriptNode?.dataset?.autoAffiliate;\n\n    if (typeof nodeData === 'string') {\n      const tags: { hosts: string[]; query: Record<string, string> }[] = [];\n\n      const expressions = nodeData.match(AUTO_CONFIG_SYNTAX_REGEX);\n\n      if (!expressions) return;\n\n      Object.values(expressions).forEach((expression) => {\n        const components = AUTO_CONFIG_SYNTAX_REGEX.exec(expression);\n\n        if (!components || components.length !== 3) return;\n\n        const hosts = components[1];\n        const queries = components[2];\n\n        tags.push({\n          hosts: hosts.split(',').map((host) => host.trim()),\n          query: queries.split(',').reduce((a, b) => {\n            const [key, value] = b.split('=');\n            if (key && value) a[key.trim()] = value.trim();\n            return a;\n          }, {} as Record<string, string>),\n        });\n      });\n\n      return { tags };\n    }\n  }\n};\n\nexport default AutoConfig;\n","// Check for MutationObserver\nexport const hasMutationObserver =\n  typeof window === 'object' &&\n  !(typeof window.MutationObserver === 'undefined');\n\n// Check for URL and URLSearchParams\nexport const hasURL =\n  typeof URL === 'function' && typeof URLSearchParams === 'function';\n","/**\n * log handles formatting and doesn't throw errors is console is undefined\n *\n * @module affiliate/src/Log\n */\nexport default function (\n  isError: boolean,\n  ...args: (string | number | object)[]\n) {\n  const textId = '[Affiliate] ';\n\n  if (typeof console === 'object') {\n    if (isError) {\n      console.error(textId, ...args);\n    } else {\n      console.log(textId, ...args);\n    }\n  }\n}\n","const NODE_DATA_KEY = '_aff';\n\ntype DataNode = Node & { [NODE_DATA_KEY]?: Record<string, string> };\n\nexport const getNodeData = (node: DataNode): Record<string, string> => {\n  return node[NODE_DATA_KEY] ?? {};\n};\n\nexport const setNodeData = (\n  node: DataNode,\n  data: Record<string, string>,\n): void => {\n  Object.assign(node, { [NODE_DATA_KEY]: data });\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(309);\n"],"names":["Affiliate","config","state","attached","tags","hosts","observer","undefined","modifyURL","url","node","tag","linkData","getNodeData","is","href","originalURL","log","query","Object","keys","_a","forEach","key","searchParams","set","modify","returnedURL","URL","window","location","origin","e","modifiedUrl","replace","_b","replacement","from","to","setNodeData","was","attach","document","readyState","traverse","features_1","observe","body","childList","subtree","attributes","characterData","attributeFilter","addEventListener","detach","disconnect","map","i","this","log_1","MutationObserver","mutations","emitted","mutation","type","attributeName","target","nodeSet","getElementsByTagName","collection","nodes","values","nodeName","toLowerCase","length","indexOf","host","exports","Generator","instances","create","Instance","Affiliate_1","push","detachAll","instance","revert","auto","AUTO_CONFIG_SYNTAX_REGEX","scriptNode","getElementById","nodeData","dataset","autoAffiliate","expressions","match","expression","components","exec","queries","split","trim","reduce","a","b","value","URLSearchParams","isError","textId","console","args","error","NODE_DATA_KEY","data","assign","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","call"],"sourceRoot":""}