{"version":3,"file":"affiliate.web.js","mappings":"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","sources":["webpack://Affiliate/../src/Affiliate.ts","webpack://Affiliate/../src/index.ts","webpack://Affiliate/../src/shared/autoConfig.ts","webpack://Affiliate/../src/shared/log.ts","webpack://Affiliate/../src/shared/nodeTools.ts","webpack://Affiliate/../node_modules/querystringify/index.js","webpack://Affiliate/../node_modules/requires-port/index.js","webpack://Affiliate/../node_modules/url-parse/index.js","webpack://Affiliate/webpack/bootstrap","webpack://Affiliate/webpack/runtime/global","webpack://Affiliate/webpack/startup"],"sourcesContent":["import URLParse from 'url-parse';\nimport Log from './shared/log';\nimport { getNodeData, setNodeData } from './shared/nodeTools';\n\n// Check for MutationObserver\nconst canObserve =\n  typeof window === 'object' &&\n  !(typeof window.MutationObserver === 'undefined');\n\nexport interface AffiliateConfigTag {\n  hosts: string | string[];\n  query?: { [key: string]: string };\n  replace?: {\n    to: string;\n    from: string;\n  }[];\n  modify?: (url: URLParse) => URLParse | string;\n}\n\nexport interface AffiliateConfig {\n  tags: AffiliateConfigTag[];\n  log?: boolean;\n}\n\n/**\n * @class Manages stateful affiliation\n */\nclass Affiliate {\n  state: {\n    attached: boolean;\n    config: AffiliateConfig;\n    hosts: string[];\n  } = {\n    attached: false,\n    config: {\n      tags: [],\n    },\n    hosts: [],\n  };\n  observer: MutationObserver | undefined = undefined;\n  log: typeof Log;\n\n  constructor(config?: Partial<AffiliateConfig>) {\n    // Extend the configuration\n    config = config ?? {};\n    config.tags = config.tags ?? [];\n\n    config.tags.map((tag, i) => {\n      if (!config || !config.tags) return;\n\n      // Convert a single host to an array\n      if (typeof tag.hosts === 'string') tag.hosts = [tag.hosts];\n\n      // Extend proper tag configuration\n      config.tags[i] = {\n        query: {},\n        replace: [],\n        ...tag,\n      };\n\n      // Append hosts to full list\n      this.state.hosts = [\n        ...this.state.hosts,\n        ...(<string[]>config.tags[i].hosts),\n      ];\n    });\n\n    // Set logging function\n    this.log = config.log ? Log : () => {};\n\n    this.log(false, 'New Instance', config);\n\n    // Check is MutationObserver is supported\n    if (canObserve) {\n      // Initialize MutationObserver\n      this.observer = new window.MutationObserver((mutations) => {\n        // This function is called for every DOM mutation\n\n        // Has a mutation been logged\n        let emitted = false;\n\n        for (let i in mutations) {\n          // If the attributes of the link have been modified\n          if (mutations[i].type === 'attributes') {\n            // Skip links without an href\n            if (mutations[i].attributeName !== 'href') continue;\n\n            let href = (<HTMLAnchorElement>mutations[i].target).href;\n            let linkData = getNodeData(mutations[i].target);\n\n            // Skip links without a modified href\n            if (linkData.is && linkData.is === href) continue;\n          }\n\n          // Only calls on first mutation\n          if (!emitted) {\n            this.log(false, 'DOM Mutation', mutations[i]);\n            emitted = true;\n          }\n\n          // Scan the node and subnodes if there are any\n          this.traverse(<HTMLElement>mutations[i].target);\n        }\n      });\n    }\n\n    // Set internal state\n    this.state.config = <AffiliateConfig>config;\n  }\n\n  /**\n   * Manual function to search the DOM for unaffiliated links\n   *\n   * @function\n   * @param {object=} nodeSet The node to traverse for links (default: document.body)\n   */\n  traverse(nodeSet: HTMLElement = document.body) {\n    if (\n      typeof nodeSet !== 'object' ||\n      typeof nodeSet.getElementsByTagName !== 'function'\n    )\n      return;\n\n    this.log(false, 'Traversing DOM...');\n\n    // Reduce link collection to array\n    let collection = nodeSet.getElementsByTagName('a');\n    let nodes = <HTMLElement[]>Object.values(collection);\n\n    // If the nodeSet is a single link, turn to array\n    if (nodeSet.nodeName.toLowerCase() === 'a') nodes = [nodeSet];\n\n    this.log(false, `Found ${nodes.length + 1} nodes...`);\n\n    // Go through each link\n    nodes.forEach((node) => {\n      // Check if it is actually linking\n      if (!node || !('href' in node)) return;\n\n      // Parse the URL via url-parse\n      let url = URLParse((<HTMLAnchorElement>node).href ?? '', true);\n\n      // Only modify hosts provided.\n      if (this.state.hosts.indexOf(url.host) === -1) return;\n      this.state.config.tags.forEach((tag) => {\n        if (tag.hosts.indexOf(url.host) !== -1) {\n          this.modifyURL(url, <HTMLAnchorElement>node, tag);\n        }\n      });\n    });\n  }\n\n  /**\n   * Modify the URL of a matching link while preserving the original link state\n   *\n   * @private\n   * @function\n   * @param {string} url Original url string\n   * @param {object} node Anchor link node\n   * @param {object} tag Matching configuration tag\n   */\n  modifyURL = (\n    url: URLParse,\n    node: HTMLAnchorElement,\n    tag: AffiliateConfigTag,\n  ) => {\n    // Check if URL is already modified\n    let linkData = getNodeData(node);\n    if (linkData.is && linkData.is === url.href) return;\n\n    // Preserve the original URL\n    let originalURL = url.href;\n\n    this.log(false, 'Discovered URL: ' + url.href);\n\n    // Change query variables\n    url.set('query', { ...url.query, ...tag.query });\n\n    // Run the modification function\n    if (typeof tag.modify === 'function') {\n      try {\n        let returnedURL = tag.modify(url);\n        if (typeof returnedURL === 'object') returnedURL = returnedURL.href;\n        url = URLParse(returnedURL, true);\n      } catch (e) {\n        Log(true, e);\n      }\n    }\n\n    // Replace certain parts of the url\n    let modifiedUrl = url.href;\n    tag.replace?.forEach((replacement) => {\n      modifiedUrl = modifiedUrl.replace(replacement.from, replacement.to);\n    });\n\n    // Update the href tag and save the url to the DOM node\n    node.href = modifiedUrl;\n    setNodeData(node, {\n      was: originalURL,\n      is: url,\n    });\n  };\n\n  /**\n   * Attach the mutation observer\n   *\n   * @function\n   */\n  attach: () => void = () => {\n    // Cannot attach twice, cannot attach for node\n    if (this.state.attached || typeof document === 'undefined') return;\n\n    // Get readyState, or the loading state of the DOM\n    let { readyState } = document;\n\n    if (readyState === 'complete' || readyState === 'interactive') {\n      // Set attached to true\n      this.state.attached = true;\n\n      // Run through the entire body tag\n      this.traverse();\n\n      if (canObserve && this.observer) {\n        // Attach the observer\n        this.observer.observe(document.body, {\n          childList: true,\n          subtree: true,\n          attributes: true,\n          characterData: true,\n          attributeFilter: ['href'],\n        });\n      } else {\n        this.log(false, 'Browser does not support MutationObserver.');\n      }\n    } else {\n      // Wait until the DOM loads\n      return window.addEventListener('DOMContentLoaded', this.attach);\n    }\n  };\n\n  /**\n   * Detach the mutation observer\n   *\n   * @function\n   */\n  detach = () => {\n    if (!canObserve || !this.observer) return;\n    this.state.attached = false;\n    this.observer.disconnect();\n    this.log(false, 'Observer disconnected.');\n  };\n}\n\nexport default Affiliate;\n","import AutoConfig from './shared/autoConfig';\nimport Affiliate, { AffiliateConfig } from './Affiliate';\nimport Log from './shared/log';\nimport { getNodeData, setNodeData } from './shared/nodeTools';\n\n/**\n * @class Set up the global Affiliate export\n */\nclass Generator {\n  state: {\n    instances: Affiliate[];\n    auto?: Affiliate;\n  } = {\n    instances: [],\n  };\n\n  constructor() {\n    try {\n      let config = AutoConfig();\n      if (typeof config === 'object') {\n        let auto = this.create(config);\n        Log(false, auto);\n        this.state.auto = auto;\n        auto.attach();\n      }\n    } catch (e) {\n      Log(true, e);\n    }\n  }\n\n  /**\n   * Create a new Affiliate instance\n   *\n   * @function\n   * @param {object} config Configuration options for Affiliate\n   * @returns {object} Affiliate instance\n   */\n  create = (config: Partial<AffiliateConfig>) => {\n    let Instance = new Affiliate(config);\n    this.state.instances.push(Instance);\n    return Instance;\n  };\n\n  /**\n   * Expose the instance list\n   *\n   * @type {Array.<object>}\n   */\n  get instances() {\n    return [...this.state.instances];\n  }\n\n  /**\n   * Detach automatic link traversal\n   *\n   * @function\n   */\n  detachAll = () => {\n    for (let i in this.state.instances) {\n      this.state.instances[i].detach();\n    }\n  };\n\n  /**\n   * Revert all traversed links to their non-affiliated state\n   *\n   * @function\n   */\n  revert = () => {\n    this.detachAll();\n    let nodes = <HTMLAnchorElement[]>(\n      [].slice.call(document.body.getElementsByTagName('a'))\n    );\n    for (let i in nodes) {\n      let linkData = getNodeData(nodes[i]);\n      if (linkData && linkData.was) {\n        nodes[i].href = linkData.was;\n        setNodeData(nodes[i], {});\n      }\n    }\n  };\n}\n\nexport default new Generator();\n","type BreakUpData = string | Array<BreakUpData>;\n\n/* Utility function for parsing data-aff syntax */\nconst breakUp: (data: BreakUpData, delimiter: string) => BreakUpData = (\n  data: BreakUpData | string,\n  delimiter: string\n) => {\n  if (typeof data === 'object') {\n    for (let i in data) {\n      data[i] = breakUp(data[i], delimiter);\n    }\n  } else if (typeof data === 'string') {\n    data = data.split(delimiter);\n    for (let o in data) {\n      data[o] = (<string>data[o]).trim();\n    }\n  }\n  return data;\n};\n\n/* Setup automatic configuration */\nconst AutoConfig = () => {\n  let scriptNode = document.getElementById('aff-js');\n\n  if (typeof scriptNode === 'object' && scriptNode !== null) {\n    let nodeData = scriptNode.dataset.aff;\n\n    if (typeof nodeData === 'string') {\n      let parsedData = <string[][][][]>(\n        breakUp(breakUp(breakUp(breakUp(nodeData, '!'), ':'), ','), '=')\n      );\n      let tags = [];\n\n      for (let i in parsedData) {\n        let tag: {\n          hosts: string[];\n          query: { [key: string]: string };\n        } = {\n          hosts: [],\n          query: {},\n        };\n        for (let o in parsedData[i][0]) {\n          tag.hosts.push(parsedData[i][0][o][0]);\n        }\n        for (let u in parsedData[i][1]) {\n          tag.query[parsedData[i][1][u][0]] = parsedData[i][1][u][1];\n        }\n        tags.push(tag);\n      }\n\n      return { tags };\n    }\n  }\n};\n\nexport default AutoConfig;\n","/**\n * log handles formatting and doesn't throw errors is console is undefined\n *\n * @module affiliate/src/Log\n */\nexport default function (isError: boolean, ...args: any) {\n  const textId = '[Affiliate] ';\n\n  if (typeof console === 'object') {\n    if (isError) {\n      console.error(textId, ...args);\n    } else {\n      console.log(textId, ...args);\n    }\n  }\n}\n","const NODE_DATA_KEY = '_aff_data';\n\ntype DataNode = Node & { [NODE_DATA_KEY]?: Record<string, any> };\n\nexport const getNodeData = (node: DataNode): Record<string, any> => {\n  return node[NODE_DATA_KEY] ?? {};\n};\n\nexport const setNodeData = (\n  node: DataNode,\n  data: Record<string, any>,\n): void => {\n  Object.assign(node, { [NODE_DATA_KEY]: data });\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encodeURIComponent(key);\n      value = encodeURIComponent(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue;\n      pairs.push(key +'='+ value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n","'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n","'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\\\/]+)?([\\S\\s]*)/i\n  , windowsDriveLetter = /^[a-zA-Z]:/\n  , whitespace = '[\\\\x09\\\\x0A\\\\x0B\\\\x0C\\\\x0D\\\\x20\\\\xA0\\\\u1680\\\\u180E\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200A\\\\u202F\\\\u205F\\\\u3000\\\\u2028\\\\u2029\\\\uFEFF]'\n  , left = new RegExp('^'+ whitespace +'+');\n\n/**\n * Trim a given string.\n *\n * @param {String} str String to trim.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(left, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address, url) {     // Sanitize what is left of the address\n    return isSpecial(url.protocol) ? address.replace(/\\\\/g, '/') : address;\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') globalVar = window;\n  else if (typeof global !== 'undefined') globalVar = global;\n  else if (typeof self !== 'undefined') globalVar = self;\n  else globalVar = {};\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * Check whether a protocol scheme is special.\n *\n * @param {String} The protocol scheme of the URL\n * @return {Boolean} `true` if the protocol scheme is special, else `false`\n * @private\n */\nfunction isSpecial(scheme) {\n  return (\n    scheme === 'file:' ||\n    scheme === 'ftp:' ||\n    scheme === 'http:' ||\n    scheme === 'https:' ||\n    scheme === 'ws:' ||\n    scheme === 'wss:'\n  );\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @param {Object} location\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address, location) {\n  address = trimLeft(address);\n  location = location || {};\n\n  var match = protocolre.exec(address);\n  var protocol = match[1] ? match[1].toLowerCase() : '';\n  var forwardSlashes = !!match[2];\n  var otherSlashes = !!match[3];\n  var slashesCount = 0;\n  var rest;\n\n  if (forwardSlashes) {\n    if (otherSlashes) {\n      rest = match[2] + match[3] + match[4];\n      slashesCount = match[2].length + match[3].length;\n    } else {\n      rest = match[2] + match[4];\n      slashesCount = match[2].length;\n    }\n  } else {\n    if (otherSlashes) {\n      rest = match[3] + match[4];\n      slashesCount = match[3].length;\n    } else {\n      rest = match[4]\n    }\n  }\n\n  if (protocol === 'file:') {\n    if (slashesCount >= 2) {\n      rest = rest.slice(2);\n    }\n  } else if (isSpecial(protocol)) {\n    rest = match[4];\n  } else if (protocol) {\n    if (forwardSlashes) {\n      rest = rest.slice(2);\n    }\n  } else if (slashesCount >= 2 && isSpecial(location.protocol)) {\n    rest = match[4];\n  }\n\n  return {\n    protocol: protocol,\n    slashes: forwardSlashes || isSpecial(protocol),\n    slashesCount: slashesCount,\n    rest: rest\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '', location);\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (\n    extracted.protocol === 'file:' && (\n      extracted.slashesCount !== 2 || windowsDriveLetter.test(address)) ||\n    (!extracted.slashes &&\n      (extracted.protocol ||\n        extracted.slashesCount < 2 ||\n        !isSpecial(url.protocol)))\n  ) {\n    instructions[3] = [/(.*)/, 'pathname'];\n  }\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address, url);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // Default to a / for pathname if none exists. This normalizes the URL\n  // to always have a /\n  //\n  if (url.pathname.charAt(0) !== '/' && isSpecial(url.protocol)) {\n    url.pathname = '/' + url.pathname;\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result = protocol + (url.slashes || isSpecial(url.protocol) ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = qs;\n\nmodule.exports = Url;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(309);\n"],"names":["canObserve","window","MutationObserver","Affiliate","config","state","attached","tags","hosts","observer","undefined","modifyURL","url","node","tag","linkData","getNodeData","is","href","originalURL","log","set","query","modify","returnedURL","e","modifiedUrl","replace","forEach","replacement","from","to","setNodeData","was","attach","document","readyState","addEventListener","traverse","observe","body","childList","subtree","attributes","characterData","attributeFilter","detach","disconnect","map","i","this","mutations","emitted","type","attributeName","target","nodeSet","getElementsByTagName","collection","nodes","Object","values","nodeName","toLowerCase","length","indexOf","host","Generator","instances","create","Instance","push","detachAll","revert","slice","call","auto","breakUp","data","delimiter","o","split","trim","scriptNode","getElementById","nodeData","dataset","aff","parsedData","u","isError","textId","console","args","error","assign","has","prototype","hasOwnProperty","decode","input","decodeURIComponent","exports","stringify","obj","prefix","value","key","pairs","isNaN","encodeURIComponent","join","parse","part","parser","result","exec","module","port","protocol","required","qs","slashes","protocolre","windowsDriveLetter","left","RegExp","trimLeft","str","toString","rules","address","isSpecial","NaN","ignore","hash","lolcation","loc","location","g","self","finaldestination","Url","unescape","pathname","test","scheme","extractProtocol","rest","match","forwardSlashes","otherSlashes","slashesCount","relative","extracted","instruction","index","instructions","charAt","base","path","concat","last","unshift","up","splice","resolve","hostname","username","password","auth","origin","fn","pop","char","ins","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","globalThis","Function","__webpack_exports__"],"sourceRoot":""}